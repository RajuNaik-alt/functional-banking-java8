/*
 * This file is generated by jOOQ.
*/
package io.noorulhaq.functional.banking.domain.model.jooq.tables;


import io.noorulhaq.functional.banking.domain.model.jooq.Banking;
import io.noorulhaq.functional.banking.domain.model.jooq.Keys;
import io.noorulhaq.functional.banking.domain.model.jooq.tables.records.AccountsRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Accounts extends TableImpl<AccountsRecord> {

    private static final long serialVersionUID = 523234027;

    /**
     * The reference instance of <code>BANKING.ACCOUNTS</code>
     */
    public static final Accounts ACCOUNTS = new Accounts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AccountsRecord> getRecordType() {
        return AccountsRecord.class;
    }

    /**
     * The column <code>BANKING.ACCOUNTS.NO</code>.
     */
    public final TableField<AccountsRecord, String> NO = createField("NO", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false), this, "");

    /**
     * The column <code>BANKING.ACCOUNTS.NAME</code>.
     */
    public final TableField<AccountsRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false), this, "");

    /**
     * The column <code>BANKING.ACCOUNTS.BALANCE</code>.
     */
    public final TableField<AccountsRecord, BigDecimal> BALANCE = createField("BALANCE", org.jooq.impl.SQLDataType.DECIMAL.precision(65535, 32767).nullable(false), this, "");

    /**
     * The column <code>BANKING.ACCOUNTS.OPENING_DATE</code>.
     */
    public final TableField<AccountsRecord, Timestamp> OPENING_DATE = createField("OPENING_DATE", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>BANKING.ACCOUNTS.CLOSING_DATE</code>.
     */
    public final TableField<AccountsRecord, Timestamp> CLOSING_DATE = createField("CLOSING_DATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>BANKING.ACCOUNTS</code> table reference
     */
    public Accounts() {
        this("ACCOUNTS", null);
    }

    /**
     * Create an aliased <code>BANKING.ACCOUNTS</code> table reference
     */
    public Accounts(String alias) {
        this(alias, ACCOUNTS);
    }

    private Accounts(String alias, Table<AccountsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Accounts(String alias, Table<AccountsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Banking.BANKING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AccountsRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_A;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AccountsRecord>> getKeys() {
        return Arrays.<UniqueKey<AccountsRecord>>asList(Keys.CONSTRAINT_A);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Accounts as(String alias) {
        return new Accounts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Accounts rename(String name) {
        return new Accounts(name, null);
    }
}
